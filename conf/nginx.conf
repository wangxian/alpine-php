# run nginx in foreground
daemon off;

error_log /app/logs/nginx-error.log warn;
pid /var/run/nginx.pid;

worker_processes 2;

events {
  worker_connections 2048;
  multi_accept on;
}

http {
  gzip on;
  sendfile on;
  tcp_nodelay on;
  tcp_nopush on;
  keepalive_timeout 65;
  gzip_disable "msie6";
  types_hash_max_size 8192;
  default_type application/octet-stream;

  include /etc/nginx/mime.types;
  include /etc/nginx/fastcgi.conf;

  client_body_temp_path /tmp;
  fastcgi_temp_path /tmp;

  client_max_body_size 30M;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /app/logs/nginx-access.log main;

  ## Handling of IPs in proxied and load balancing situations.
  #set_real_ip_from 0.0.0.0/32; # all addresses get a real IP.
  #real_ip_header X-Forwarded-For; # the ip is forwarded from the load balancer/proxy

  server {

    #listen       [::]:80; #uncomment for IPv6 support
    listen 80;

    root /app/www;
    index index.html index.php;

    disable_symlinks off;

    location = /robots.txt {
      allow all;
      log_not_found off;
      access_log off;
    }

    # deny dot-files
    location ~ /\. {
      deny all;
      access_log off;
      log_not_found off;
    }

    # Very rarely should these ever be accessed outside of your lan
    location ~* \.(txt|log)$ {
      allow 192.168.0.0/16;
      deny all;
    }

    location ~ \..*/.*\.php$ {
      return 403;
    }

    # Block access to "hidden" files and directories whose names begin with a
    # period. This includes directories used by version control systems such
    # as Subversion or Git to store control files.
    location ~ (^|/)\. {
      return 403;
    }

    location / {
      # This is cool because no php is touched for static content
      try_files $uri @rewrite;
    }

    location @rewrite {
      # You have 2 options here
      # For D7 and above:
      # Clean URLs are handled in drupal_environment_initialize().
      rewrite ^ /index.php$request_uri;
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    location ~ [^/]\.php(/|$) {
      fastcgi_split_path_info ^(.+?\.php)(/.*)$;
      fastcgi_param PATH_INFO $fastcgi_path_info;

      if (!-f $document_root$fastcgi_script_name) {
        return 404;
      }
      fastcgi_pass unix:/var/run/php-fpm.sock;
      #fastcgi_pass 127.0.0.1:9000;
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      include fastcgi_params;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
      expires max;
      log_not_found off;
    }
  }

}
